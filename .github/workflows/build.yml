name: Build
on:
  push:
    paths-ignore:
      - "README.md"

jobs:
  lint:
    name: Run lint checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with submodules for libzt)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - run: make lint

  build_matrix:
    needs: lint
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        target: [debug, release]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Build ${{ matrix.os }} - ${{ matrix.target }}
        timeout-minutes: 10
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - run: make ${{ matrix.target }}

  build_openwrt_arm64_musl:
    name: Build OpenWrt aarch64-musl (MT7986)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with submodules for libzt)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake pkg-config curl xz-utils file

      - name: Fetch musl aarch64 cross toolchain
        run: |
          TOOLCHAIN=aarch64-linux-musl
          curl -L https://musl.cc/${TOOLCHAIN}-cross.tgz | tar -xz
          echo "$PWD/${TOOLCHAIN}-cross/bin" >> $GITHUB_PATH

      - name: Build static binary for aarch64-musl
        env:
          CC: aarch64-linux-musl-gcc
          CXX: aarch64-linux-musl-g++
          AR: aarch64-linux-musl-ar
          RANLIB: aarch64-linux-musl-ranlib
          STRIP: aarch64-linux-musl-strip
          CFLAGS: "-Os -pipe -fPIC -ffunction-sections -fdata-sections"
          CXXFLAGS: "-Os -pipe -fPIC -ffunction-sections -fdata-sections -std=gnu++17"
          LDFLAGS: "-static -Wl,--gc-sections"
          # 让内置的 libzt 关闭 Central API（避免依赖 curl/openssl，方便静态链接）
          LIBZT_CMAKE_FLAGS: "-DZTS_DISABLE_CENTRAL_API=1"
        run: |
          make clean || true
          make release
          $STRIP ./pylon || true
          file ./pylon
          mv ./pylon pylon-linux-aarch64-musl

      - name: Upload artifact (OpenWrt)
        uses: actions/upload-artifact@v4
        with:
          name: pylon-linux-aarch64-musl
          path: pylon-linux-aarch64-musl
